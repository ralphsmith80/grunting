<!doctype html>
<!--[if lt IE 7]> <html class="lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="lt-ie9" lang="en"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en"> <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="user-scalable=0, initial-scale=1, minimum-scale=1, maximum-scale=1, width=device-width, minimal-ui=1">

  <script>
    // dynamically update the html lang attribute for language specific styling
    // use the :lang() selector
    // e.g.
    //    :lang(en) // selects all English elements
    var html = document.getElementsByTagName('html')[0];
        lang = typeof navigator === 'undefined' ? 'en' :
          ((navigator.languages && navigator.languages[0]) ||
          navigator.language ||
          navigator.userLanguage || 'en').toLowerCase();
    html.lang = lang;
    console.info('lang:', lang);
  </script>

  <title>IBM StoredIQ</title>
  <%  var baseUrl = raw_require_config['baseUrl'],
          auxlPath = raw_require_config['paths']['auxl'],
          auxl = join(baseUrl, auxlPath);
  %>
  <link rel="shortcut icon" href="<%= auxl %>/data/favicon.ico" />


  <% if (optimized_css) { %>
    <link rel="stylesheet" href="<%= join(baseUrl, optimized_css) %>" />
  <% } %>

  <% if (models) { %>
    <script type=application/json data-models=true>
      <%= models %>
    </script>
  <% } %>


</head>
<body>

  <script src="<%= requirejs %>"></script>

  <script>
    define('meshconf', <%= meshconf %>);
  </script>

  <script>
    <% if (env === 'production') { %>
      define('app_config', [
        'text!/appstack.json?'+(new Date()).getTime()
      ], function(appstackJson) {
        var appstackData,
            appConfig = <%= app_config %>;
        try {
          appstackData = JSON.parse(appstackJson);
          appConfig.version = appstackData.version || appConfig.roleAppMap;
          appConfig.roleAppMap = appstackData.roleAppMap || appConfig.roleAppMap;
        } catch (e) {
          // do nothing
          console.error("couldn't load appstack.json");
        }
        return appConfig;
      });
    <% } else { %>
      define('app_config', [], function() {
        var appConfig = <%= app_config %>;
        return appConfig;
      });
    <% } %>
  </script>

  <script>
    require(<%= require_config %>, ['<%= js %>']);
  </script>

</body>
</html>
